/*
  完全不懂的模式：

 半懂不懂的模式：


 知道咯大概但是不怎么会用的模式：
 facade模式：明白她在讲什么，但是实际业务中很少用到的。不能很好的用在实际业务中。
 适配器adaptor模式：知道有这种模式，但是在开发中总是很难用到，或者找到用的地方。
 bridge模式：知道但是不会灵活运用。

 知道并且会用的模式：
 factory模式：知道并且会用
 builder模式：知道但是用的很少
 proxy模式：知道但是用的很少
 strategy模式：知道并且会用，有一定的认识

 其实每个设计模式都是很重要的一种思想，看上去很熟，其实是因为我们在学到的东西中都有涉及，尽管有时我们并不知道，
 其实在Java本身的设计之中处处都有体现，像AWT、JDBC、集合类、IO管道或者是Web框架，里面设计模式无处不在。设计模式增加了系统的可拓展性
 但同时它也增加了系统的复杂程度，增加了大量的类，关于是否使用设计模式应当慎重考虑。

 虽然个人很喜欢设计模式中的设计，但是对于开发人员而言，唯一目的是开发出最少代码，最高效快速的代码，至于是否使用设计模式，这不是我们最终的
 目的。
 */