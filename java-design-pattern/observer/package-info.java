package observer;
/**
 * 观察者模式：当一个对象变化时，其它依赖该对象的对象都会收到通知，并且随着变化！对象之间是一种一对多的关系。
 *
 * MySubject类就是我们的主对象，这是我们的被观察者，状态主动变化者
 * Observer1和Observer2是依赖于MySubject的对象，当MySubject变化时，Observer1和Observer2必然变化，这是状态随变化者
 *
 * AbstractSubject类中定义着需要监控的对象列表，可以对其进行修改：增加或删除被监控对象，且当MySubject变化时，负责通知在列表内存在的对象。
 * 如果观察者过多的话，个人感觉是否会导致内存过多问题，这里可能要做个限制，例如如果观察者数量过多的话，只能拒绝访问了，
 * 不过这也可能是杞人忧天。
 *
 * java 没有变量监听有点小怪，JavaScript中的变量监听功能很强大，也许这会导致效率不高问题，不过感觉问题也不大
 **/